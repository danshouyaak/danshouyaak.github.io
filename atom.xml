<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一个有趣的博客</title>
  
  <subtitle>生活明朗，万物可爱</subtitle>
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2024-08-04T17:08:39.193Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>cot</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>鱼泡-伙伴匹配系统</title>
    <link href="http://example.com/posts/5a0062e4.html"/>
    <id>http://example.com/posts/5a0062e4.html</id>
    <published>2024-08-03T08:56:03.000Z</published>
    <updated>2024-08-04T17:08:39.193Z</updated>
    
    <content type="html"><![CDATA[<h1 id="鱼泡-伙伴匹配系统"><a href="#鱼泡-伙伴匹配系统" class="headerlink" title="鱼泡-伙伴匹配系统"></a>鱼泡-伙伴匹配系统</h1><p>介绍：帮助大家找到志同道合的伙伴</p><h2 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h2><p>很多页面多要服用组件&#x2F;样式，重复写很麻烦，不利于维护，所以抽象成一个通用布局（Layout）</p><p>组件化</p><h2 id="数据库表设计"><a href="#数据库表设计" class="headerlink" title="数据库表设计"></a>数据库表设计</h2><p>标签分类（要有哪些标签，怎么把标签进行分类）</p><h2 id="新增标签表（分类表）"><a href="#新增标签表（分类表）" class="headerlink" title="新增标签表（分类表）"></a>新增标签表（分类表）</h2><p>建议用标签，不要用分类，更灵活</p><p>【用户自定义标签】？</p><p>字段：</p><pre><code>- id int 主键- 标签名varchar非空- 上传标签的用户 uerId int- 父标签id，parentId，int（分类）- 是否为父标签 isParent，tinyint（0不是，1是）- 创建时间 createTime- 更新时间 update- 是否删除 isDelete，tinyint（0，1）</code></pre><p>​</p><h2 id="修改用户表"><a href="#修改用户表" class="headerlink" title="修改用户表"></a>修改用户表</h2><p>用户有哪些标签</p><p>1.直接在用户表补充tags字段，[‘java’]</p><ul><li><p>优点：查询方便，不用新建关联表，标签是用户的固有属性（除了该系统，其他系统可能要用到，标签是用户的固有属性）</p></li><li><p>查询用户列表，查关系表拿到100个用户有的标签id</p></li><li><p>缺点：用户表多一列</p></li></ul><p>2.加个关联表，记录用户和标签的关系</p><p>关联表的应用场景：查询灵活，可以正查反查</p><p>缺点：要多建一个表，多维护一个表</p><p>重点：企业大项目开发中尽量减少关联查询，很影响扩展性，而且会影响查询性能</p><p>​</p><h2 id="开发后端接口"><a href="#开发后端接口" class="headerlink" title="开发后端接口"></a>开发后端接口</h2><p>搜索标签</p><p>​1.允许用户传入多个标签，多个标签存在才搜的出来 and</p><p>​2.允许用户传入多个标签，有任何一个标签存在就能搜索出来 or</p><p>两种方式：</p><p>​1.sql查询（实现简单，可以拆分查询进一步优化）</p><p>​2.内存查询（灵活，可以通过并发进一步优化）</p><ul><li>如果参数可以分析，根据用户的参数去选择查询方式，比如标签数</li><li>如果参数不可分析，并且数据库连接足够，内存空间足够，可以并发同时查询，谁先返回用谁</li><li>还可以sql查询与内存计算相结合，比如先用sql过滤掉部分</li></ul><h2 id="用户中心来集中提供用户检索，操作，登录，鉴权"><a href="#用户中心来集中提供用户检索，操作，登录，鉴权" class="headerlink" title="用户中心来集中提供用户检索，操作，登录，鉴权"></a>用户中心来集中提供用户检索，操作，登录，鉴权</h2><h2 id="存量用户信息导入及同步"><a href="#存量用户信息导入及同步" class="headerlink" title="存量用户信息导入及同步"></a>存量用户信息导入及同步</h2><p>1.把所有星球用户信息导入</p><p>2.把写了自我介绍的同学的标签信息导入</p><h3 id="看上了信息怎么抓取"><a href="#看上了信息怎么抓取" class="headerlink" title="看上了信息怎么抓取?"></a>看上了信息怎么抓取?</h3><p>1.分析原网站是怎么获取这些数据的？哪个接口？</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">curl <span class="string">&quot;https://api.zsxq.com/v2/hashtags/48844541281228/topics?count=20&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;authority: api.zsxq.com&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;accept: application/json, text/plain, */*&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;accept-language: zh-CN,zh;q=0.9&quot;</span> ^</span><br><span class="line"></span><br><span class="line">  -H <span class="string">&quot;origin: https://wx.zsxq.com&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;referer: https://wx.zsxq.com/&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;sec-ch-ua: ^\^&quot;</span>Not_A Brand^\^<span class="string">&quot;;v=^\^&quot;</span>8^\^<span class="string">&quot;, ^\^&quot;</span>Chromium^\^<span class="string">&quot;;v=^\^&quot;</span>120^\^<span class="string">&quot;, ^\^&quot;</span>Google Chrome^\^<span class="string">&quot;;v=^\^&quot;</span>120^\^<span class="string">&quot;&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;sec-ch-ua-mobile: ?0&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;sec-ch-ua-platform: ^\^&quot;</span>Windows^\^<span class="string">&quot;&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;sec-fetch-dest: empty&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;sec-fetch-mode: cors&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;sec-fetch-site: same-site&quot;</span> ^</span><br><span class="line">  -H <span class="string">&quot;user-agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36&quot;</span> ^</span><br><span class="line">  --compressed</span><br></pre></td></tr></table></figure><p>2.用程序去调用接口（java&#x2F;python都可以）</p><p>3.处理（清洗一下数据），之后就可以写到数据库</p><h3 id="流程"><a href="#流程" class="headerlink" title="流程"></a>流程</h3><p>1.从execl中导入全量用户数据，<strong>盘重</strong></p><p>2.抓取写了自我介绍的同学信息，提取出用户昵称，用户唯一id，自我介绍信息</p><p>3.从自我介绍中提取信息，然后写到数据库中</p><p>easy excel：<a href="https://easyexcel.opensource.alibaba.com/">https://easyexcel.opensource.alibaba.com/</a></p><h3 id="Easy-excel"><a href="#Easy-excel" class="headerlink" title="Easy excel"></a>Easy excel</h3><p>两种读取方式</p><p>​1.确定表头：建立对象，</p><p>​2.不确定表头：每一行数据映射为Map&lt;String,Obj&gt;</p><p>两种读取模式：</p><p>1.监听器：</p><p>2.同步读：无需创建监听器，一次性获取完整数据。操作方便简单，但是数据量大时会有时等待时常，也可能有内存溢出</p><h2 id="前端路由传值"><a href="#前端路由传值" class="headerlink" title="前端路由传值"></a>前端路由传值</h2><p>1.query &#x3D;&gt; url searchParams,url后附加参数，传递的值长度有限</p><ol start="2"><li></li></ol><h2 id="配置跨域"><a href="#配置跨域" class="headerlink" title="配置跨域"></a>配置跨域</h2><p>一般跨域问题后端处理比较合理，不需要每个前端后需要进行配置跨域</p><h2 id="改造用户中心，把单机登录改为分布式session登录"><a href="#改造用户中心，把单机登录改为分布式session登录" class="headerlink" title="改造用户中心，把单机登录改为分布式session登录"></a>改造用户中心，把单机登录改为分布式session登录</h2><h3 id="Session共享"><a href="#Session共享" class="headerlink" title="Session共享"></a>Session共享</h3><p>种session的时候注意范围，cookie.domain</p><p>比如两个域名：</p><p>​aaa.com</p><p>​bb.com</p><p>如果要共享，可以种一个更高级的公共域名</p><h3 id="为什么服务器A登录后，请求发到服务器B，不认识该用户？"><a href="#为什么服务器A登录后，请求发到服务器B，不认识该用户？" class="headerlink" title="为什么服务器A登录后，请求发到服务器B，不认识该用户？"></a>为什么服务器A登录后，请求发到服务器B，不认识该用户？</h3><p>解决方案：<strong>共享存储</strong>，而不是把数据放到单台服务器的内存中</p><h3 id="如何共享存储？"><a href="#如何共享存储？" class="headerlink" title="如何共享存储？"></a>如何共享存储？</h3><p>核心思想：把数据放到同一个地方去集中管理。</p><p>1.redis（基于内存的k&#x2F;v数据库）此处选择redis，因为用户心虚读取&#x2F;是否登录的判断及其<strong>频繁</strong>，redis基于内存，读写性能很高，简单的数据单机qps 5w-10w</p><p>2.mysql</p><p>3.文件服务器ceph</p><h2 id="实现Session共享"><a href="#实现Session共享" class="headerlink" title="实现Session共享"></a>实现Session共享</h2><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.boot<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-boot-starter-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.4<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>引入spring-session与redis整合，使得自动将session存储到redis中</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.springframework.session<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>spring-session-data-redis<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">version</span>&gt;</span>2.6.3<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p>修改spring-session存储配置<code>spring.session.store-type</code>默认值none，表示存储在服务器</p><p>设置<code>spring.session.store-type</code>默认值redis，但保存Session的时候就会默认存储到redis中</p><h2 id="其他单点登录方案"><a href="#其他单点登录方案" class="headerlink" title="其他单点登录方案"></a>其他单点登录方案</h2><p>常用的就是jwt。</p><p>Redis Session 对比 jwt 的优缺点：<a href="https://zhuanlan.zhihu.com/p/108999941">https://zhuanlan.zhihu.com/p/108999941</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;鱼泡-伙伴匹配系统&quot;&gt;&lt;a href=&quot;#鱼泡-伙伴匹配系统&quot; class=&quot;headerlink&quot; title=&quot;鱼泡-伙伴匹配系统&quot;&gt;&lt;/a&gt;鱼泡-伙伴匹配系统&lt;/h1&gt;&lt;p&gt;介绍：帮助大家找到志同道合的伙伴&lt;/p&gt;
&lt;h2 id=&quot;开发&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://example.com/posts/4a17b156.html"/>
    <id>http://example.com/posts/4a17b156.html</id>
    <published>2024-08-03T08:47:08.000Z</published>
    <updated>2024-08-03T08:47:16.766Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a><br>test<br>test</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for</summary>
      
    
    
    
    
  </entry>
  
</feed>
